% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/get_coordinated_tweets.R
\name{get_coordinated_tweets}
\alias{get_coordinated_tweets}
\title{get_coordinated_tweets}
\usage{
get_coordinated_tweets(
  data_path = NULL,
  coord_function = c("get_coretweet", "get_cotweet", "get_coreply", "get_clsb",
    "get_cohashtag"),
  reply_type = NULL,
  time_window = 60,
  min_repetition = 2,
  chart = FALSE,
  parallel_cores = NULL,
  coord_time_distribution = FALSE,
  quick = FALSE
)
}
\arguments{
\item{data_path}{file path to a folder containing the JSON files returned by the function \link[academictwitteR]{get_all_tweets}.}

\item{coord_function}{the type of coordinated behavior to detect. Currently, one of "get_coretweet", "get_cotweet", "get_coreply", "get_clsb", "get_cohashtag". See details.}

\item{reply_type}{the type of co-reply behavior: one among "same_text" and "same_user". Required if the coord_function is "get_coreply". See details.}

\item{time_window}{the number of seconds within which tweets are to be considered as coordinated (default to 60 seconds).}

\item{min_repetition}{the minimum number of published coordinated tweets necessary for a user to be included it in the coordinated network.}

\item{chart}{if TRUE, the function returns a simple chart of the network for exploratory analysis. Default to FALSE.}

\item{parallel_cores}{number of cores to be used in parallel computing. Default to all available cores -1.}

\item{coord_time_distribution}{Default to FALSE. If TRUE, it returns the distribution of time difference between the same action performed by all the users in the original dataset.}

\item{quick}{Default to FALSE. If TRUE, the more restrictive but quicker and less computationally intensive algorithm (Giglietto et al, 2020) is implemented to identify coordinated users. It can be especially useful when dealing with large datasets.

This function works by running the main analysis a second time, without imposing a time_window and min_repetition interval. This significantly increases the computational time required to get the output (approximately 2x).}
}
\value{
a list of outputs including:
\itemize{
\item the coordinated network as a .graphml object;
\item a data frame including information on the coordinated users identified by the analysis;
\item the analyzed dataset augmented with a column indicating whether the tweet is coordinated or non-coordinated.
}
}
\description{
Function to identify different types of coordinated tweet networks.
}
\details{
Coordinated behavior has been shown to be a strategy employed for political astroturfing (Keller et al., 2020) and the spread of problematic content online (Giglietto et al., 2020).
The functions implemented in this package enable users to perform a variety of analyses to detect possible coordinated newtorks on Twitter.

In the network, users are represented as nodes and a link between them is created when they perfom the same action at least n times (with n specified by the paramenter 'min_repetition') within a predefined time threshold (as specified by the parameter 'time_window').
The coordinated actions that can be detected are the following:
\itemize{
\item "get_coretweet" detects networks of accounts that repeatedly shared the same retweet;
\item "get_cotweet" detects networks of accounts that repeatedly published the same tweet;
\item "get_coreply" detects networks of accounts that repeatedly replied with the same text (same_text) or to the same user (same_user);
\item "get_clsb" detects networks of accounts that repeatedly shared the same URLs. The function refers to Coordinated Link Sharing Behavior (Giglietto et al, 2020);
\item "get_cohashtag" detectes networks of accounts that repeatedly shared the same hashtag.
}

To identify the network, all possible k=2 combinations between users is calculated for each n identical actions, and then filtered according to the parameter time_window and min_repetition.
The number of possible combinations increases exponentially with the n number of actions (base::choose(n, k)), requiring increasing computational power.

An alternative algorithm (Giglietto et al, 2020) can be implemented by setting quick = TRUE. This algorithm cuts the period of time from the first to the last action in t period of length equals to time_window, and defines as coordinated the accounts that performed the same action within the same time window.
The algorithm has been originally implemented in CooRnet (Giglietto et al, 2020) to detect coordinated networks on Facebook and Instagram, and empirically proved appropriate to this aim.
It can be especially useful when dealing with large datasets, for a first analysis before deciding to run the more computationally intensive algorithm. I
}
\references{
Giglietto, F., Righetti, N., Rossi, L., & Marino, G. (2020). It takes a village to manipulate the media: coordinated link sharing behavior during 2018 and 2019 Italian elections. Information, Communication & Society, 23(6), 867-891.

Keller, F. B., Schoch, D., Stier, S., & Yang, J. (2020). Political astroturfing on Twitter: How to coordinate a disinformation campaign. Political Communication, 37(2), 256-280.
}
